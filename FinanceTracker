package com.finance.tracker;

import java.util.List;
import java.util.ArrayList;
import java.util.stream.Collectors;

public class FinanceTracker {
    private final List<Transaction> transactions = new ArrayList<>();

    public void addTransaction(String description, double amount, String category) {
        transactions.add(new Transaction(description, amount, category));
    }

    public List<Transaction> filterByCategory(String category) {
        return transactions.stream()
                .filter(t -> t.getCategory().equalsIgnoreCase(category))
                .collect(Collectors.toList());
    }

    public double calculateTotalExpenses() {
        return transactions.stream()
                .filter(t -> t.getAmount() < 0)
                .mapToDouble(Transaction::getAmount)
                .sum();
    }

    public double calculateTotalIncome() {
        return transactions.stream()
                .filter(t -> t.getAmount() > 0)
                .mapToDouble(Transaction::getAmount)
                .sum();
    }

    public List<Transaction> getTransactions() {
        return transactions;
    }
}
